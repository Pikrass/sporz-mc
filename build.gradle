buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

repositories {
	maven {
		name = "gettext-commons"
		url = "https://gettext-commons.googlecode.com/svn/maven-repository/"
	}
}


apply plugin: 'forge'

group =  "net.pikrass.sporzmc"
archivesBaseName = "sporzmc"
def dev = file('DEV').exists()

version = {
	def gitVersion = "git describe --first-parent --match=v*".execute().text
	def match = gitVersion =~ /^v([0-9.]+(-[a-z][a-z0-9]*)?)(?:-(\d+)-g[0-9a-f]{1,40})?/
	if(!match)
		if(dev)
			return "0.0-dev";
		else
			return "0.0";

	if(dev)
		return match.group(1) + "-dev"

	if(!match.group(3))
		if(match.group(2))
			return match.group(1)
		else
			return match.group(1) + ".0"

	if(match.group(2))
		return match.group(1) + "-" + match.group(3)
	else
		return match.group(1) + "." + match.group(3)
}.call()

List libs = [
	"org.xnap.commons:gettext-commons:0.9.6",
	project(':lib:sporz')
]

configurations {
	mergeLibs
}

dependencies {
	mergeLibs libs
	compile libs
}

minecraft {
	version = "1.8-11.14.3.1450"
	mappings = "snapshot_20141130"
}

compileJava {
	options.encoding = 'UTF-8'
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

jar {
	from configurations.mergeLibs.collect { zipTree(it) }
}

task buildPot << {
	exec {
		commandLine 'bash', '-c',
					"xgettext -L java --from-code utf-8 -k_ -k_:1c,2,2t -k_:1,2,3t -o po/sporzmc.pot \$(find src/main/java/net/pikrass/sporzmc -name '*.java')"
	}
}
