buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

apply plugin: 'forge'

version = "0.0"
group= "net.pikrass.sporzmc"
archivesBaseName = "sporzmc"

minecraft {
	version = "1.8-11.14.3.1450"
	mappings = "snapshot_20141130"
}

task buildPot << {
	exec {
		commandLine 'bash', '-c', "xgettext -L java --from-code utf-8 -k_ -o po/sporzmc.pot \$(find src/main/java/net/pikrass/sporzmc -name '*.java')"
	}
}

repositories {
	maven {
		name = "gettext-commons"
		url = "https://gettext-commons.googlecode.com/svn/maven-repository/"
	}
}

List libs = [
	"org.xnap.commons:gettext-commons:0.9.6",
	project(':lib:sporz')
]

configurations {
	mergeLibs
}

dependencies {
	mergeLibs libs
	compile libs
}

processResources
{
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

jar {
	from configurations.mergeLibs.collect { zipTree(it) }
}
